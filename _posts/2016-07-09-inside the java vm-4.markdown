---
layout: post
title:  "深入java虚拟机-4 垃圾收集"
date:   2016-07-11 22:03:20 +0800
categories: java
tags:
- learn
- java
---

垃圾收集（或者叫内存回收）

判断哪些对象是不再被引用的；释放不再被引用的对象所占据的堆空间；处理堆碎块

垃圾检测通常通过建立一个根对象的集合并且检查从这些根对象开始的可触及性来实现。如果正则执行的程序可以访问到根对象和某个对象直接存在引用路径，这个对象就是可触及的。根对象总数可触及的。无法被触及的对象被认为是垃圾。

java虚拟机的根对象集合根据实现不同而不同，但总会包含局部变量中的对象引用和栈桢的操作数栈（以及类变量中的对象引用），以及被加载的类的常量池中的对象引用，比如字符串。被加载的类的常量池可能指向保存在堆中的字符串，比如类名字、超类、超接口的名字、字段、字段特征签名、方法名或者方法特征签名。传递到本地方法中的、没有被本地方法“释放”的对象引用。

## 1. 引用计数收集器（垃圾收集的早期策略）

堆中每一个对象都有一个引用计数，当一个对象被创建了，并且指向该对象的引用被分配给一个变量，这个对象的引用计数被置为1.当其他变量被赋值为这个对象的引用时，计数加1。当一个对象的引用超过了生存期或者被设置一个新的值时，对象的引用计数减1。任何引用计数为0的对象可以被当作垃圾收集。当一个对象被垃圾收集时，它引用的任何对象计数值减1。这种方法中，一个对象被垃圾收集后可能导致后续其他对象的垃圾收集行动。

好处：引用计数收集器可以很快地执行，交织在程序的运行之中，这个特性对于程序不能被长时间打断的实时环境很有利。

坏处：无法检测出循环，导致有些对象计数永远不可能为0；每次引用计数的增减都带来额外开销。

## 2. 跟踪收集器

跟踪从根节点开始的对象引用图。在追踪过程中遇到的对象以某种方式打上标记。总的来说，要么在对象本身设置标记，要么用一个独立的位图来设置标记。当追踪结束时，未被标记的对象就知道是无法触及的，从而被收集。

## 3. 压缩收集器

对付堆碎块的策略。

## 4. 拷贝收集器

把所有活动对象移动到一个新区域。